"use strict";var e=require("./index-c81a418a.js");const n={code:'.autocomplete.svelte-1btjh7.svelte-1btjh7{min-width:200px;display:inline-block;max-width:100%;position:relative;vertical-align:top;height:2.25em}.autocomplete.svelte-1btjh7.svelte-1btjh7:not(.hide-arrow)::after{border:3px solid transparent;border-radius:2px;border-right:0;border-top:0;content:" ";display:block;height:0.625em;margin-top:-0.4375em;pointer-events:none;position:absolute;top:50%;transform:rotate(-45deg);transform-origin:center;width:0.625em;border-color:#3273dc;right:1.125em;z-index:4}.autocomplete.svelte-1btjh7 .svelte-1btjh7{box-sizing:border-box}.autocomplete-input.svelte-1btjh7.svelte-1btjh7{font:inherit;width:100%;height:100%;padding:5px 11px}.autocomplete-list.svelte-1btjh7.svelte-1btjh7{background:#fff;position:relative;width:100%;overflow-y:auto;z-index:99;padding:10px 0;top:0px;border:1px solid #999;max-height:calc(15 * (1rem + 10px) + 15px);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.autocomplete-list.svelte-1btjh7.svelte-1btjh7:empty{padding:0}.autocomplete-list-item.svelte-1btjh7.svelte-1btjh7{padding:5px 15px;color:#333;cursor:pointer;line-height:1}.autocomplete-list-item.svelte-1btjh7.svelte-1btjh7:hover,.autocomplete-list-item.selected.svelte-1btjh7.svelte-1btjh7{background-color:#2e69e2;color:#fff}.autocomplete-list-item-no-results.svelte-1btjh7.svelte-1btjh7{padding:5px 15px;color:#999;line-height:1}.autocomplete-list.hidden.svelte-1btjh7.svelte-1btjh7{display:none}',map:'{"version":3,"file":"SimpleAutocomplete.svelte","sources":["SimpleAutocomplete.svelte"],"sourcesContent":["<script>\\n  // the list of items  the user can select from\\n  export let items;\\n\\n  // field of each item that\'s used for the labels in the list\\n  export let labelFieldName = undefined;\\n  export let keywordsFieldName = labelFieldName;\\n  export let valueFieldName = undefined;\\n\\n  export let labelFunction = function(item) {\\n    if (item === undefined || item === null) {\\n      return \\"\\";\\n    }\\n    return labelFieldName ? item[labelFieldName] : item;\\n  };\\n\\n  export let keywordsFunction = function(item) {\\n    if (item === undefined || item === null) {\\n      return \\"\\";\\n    }\\n    return keywordsFieldName ? item[keywordsFieldName] : item;\\n  };\\n\\n  export let valueFunction = function(item) {\\n    if (item === undefined || item === null) {\\n      return item;\\n    }\\n    return valueFieldName ? item[valueFieldName] : item;\\n  };\\n\\n  export let keywordsCleanFunction = function(keywords) {\\n    return keywords;\\n  };\\n\\n  export let textCleanFunction = function(userEnteredText) {\\n    return userEnteredText;\\n  };\\n\\n  export let searchFunction = false;\\n\\n  export let beforeChange = function(oldSelectedItem, newSelectedItem) {\\n    return true;\\n  };\\n  export let onChange = function(newSelectedItem) {};\\n\\n  export let selectFirstIfEmpty = false;\\n\\n  export let minCharactersToSearch = 1;\\n  export let maxItemsToShowInList = 0;\\n  export let noResultsText = \\"No results found\\";\\n\\n  const uniqueId = \\"sautocomplete-\\" + Math.floor(Math.random() * 1000);\\n\\n  function safeStringFunction(theFunction, argument) {\\n    if (typeof theFunction !== \\"function\\") {\\n      console.error(\\n        \\"Not a function: \\" + theFunction + \\", argument: \\" + argument\\n      );\\n    }\\n    let originalResult;\\n    try {\\n      originalResult = theFunction(argument);\\n    } catch (error) {\\n      console.warn(\\n        \\"Error executing Autocomplete function on value: \\" +\\n          argument +\\n          \\" function: \\" +\\n          theFunction\\n      );\\n    }\\n    let result = originalResult;\\n    if (result === undefined || result === null) {\\n      result = \\"\\";\\n    }\\n    if (typeof result !== \\"string\\") {\\n      result = result.toString();\\n    }\\n    return result;\\n  }\\n\\n  function safeLabelFunction(item) {\\n    // console.log(\\"labelFunction: \\" + labelFunction);\\n    // console.log(\\"safeLabelFunction, item: \\" + item);\\n    return safeStringFunction(labelFunction, item);\\n  }\\n\\n  function safeKeywordsFunction(item) {\\n    // console.log(\\"safeKeywordsFunction\\");\\n    const keywords = safeStringFunction(keywordsFunction, item);\\n    let result = safeStringFunction(keywordsCleanFunction, keywords);\\n    result = result.toLowerCase().trim();\\n    if (debug) {\\n      console.log(\\n        \\"Extracted keywords: \'\\" +\\n          result +\\n          \\"\' from item: \\" +\\n          JSON.stringify(item)\\n      );\\n    }\\n    return result;\\n  }\\n\\n  // the text displayed when no option is selected\\n  export let placeholder = undefined;\\n  // apply a className to the control\\n  export let className = undefined;\\n\\n  // apply a className to the input control\\n  export let inputClassName = undefined;\\n\\n  // apply a id to the input control\\n  export let inputId = undefined;\\n\\n  // generate an HTML input with this name, containing the current value\\n  export let name = undefined;\\n\\n  // apply a className to the dropdown div\\n  export let dropdownClassName = undefined;\\n\\n  // option to hide the dropdown arrow\\n  export let hideArrow = false;\\n\\n  // adds the disabled tag to the HTML input\\n  export let disabled = false;\\n  // add the title to the HTML input\\n  export let title = undefined;\\n  export let debug = false;\\n\\n  // selected item state\\n  export let selectedItem = undefined;\\n  export let value = undefined;\\n  let text;\\n  let filteredTextLength = 0;\\n\\n  function onSelectedItemChanged() {\\n    value = valueFunction(selectedItem);\\n    text = safeLabelFunction(selectedItem);\\n    onChange(selectedItem);\\n  }\\n\\n  $: selectedItem, onSelectedItemChanged();\\n\\n  // HTML elements\\n  let input;\\n  let list;\\n\\n  // UI state\\n  let opened = false;\\n  let highlightIndex = -1;\\n\\n  $: showList =\\n    opened && ((items && items.length > 0) || filteredTextLength > 0);\\n\\n  // view model\\n  let filteredListItems;\\n\\n  let listItems = [];\\n\\n  function prepareListItems() {\\n    let tStart;\\n    if (debug) {\\n      tStart = performance.now();\\n      console.log(\\"prepare items to search\\");\\n      console.log(\\"items: \\" + JSON.stringify(items));\\n    }\\n\\n    if (!Array.isArray(items)) {\\n      console.warn(\\n        \\"Autocomplete items / search function did not return array but\\",\\n        items\\n      );\\n      items = [];\\n    }\\n\\n    const length = items ? items.length : 0;\\n    listItems = new Array(length);\\n\\n    if (length > 0) {\\n      items.forEach((item, i) => {\\n        const listItem = getListItem(item);\\n        if (listItem == undefined) {\\n          console.log(\\"Undefined item for: \\", item);\\n        }\\n        listItems[i] = listItem;\\n      });\\n    }\\n\\n    if (debug) {\\n      const tEnd = performance.now();\\n      console.log(\\n        listItems.length +\\n          \\" items to search prepared in \\" +\\n          (tEnd - tStart) +\\n          \\" milliseconds\\"\\n      );\\n    }\\n  }\\n\\n  function getListItem(item) {\\n    return {\\n      // keywords representation of the item\\n      keywords: safeKeywordsFunction(item),\\n      // item label\\n      label: safeLabelFunction(item),\\n      // store reference to the origial item\\n      item: item\\n    };\\n  }\\n\\n  $: items, prepareListItems();\\n\\n  function prepareUserEnteredText(userEnteredText) {\\n    if (userEnteredText === undefined || userEnteredText === null) {\\n      return \\"\\";\\n    }\\n\\n    const textFiltered = userEnteredText\\n      .replace(/[&/\\\\\\\\#,+()$~%.\'\\":*?<>{}]/g, \\" \\")\\n      .trim();\\n\\n    filteredTextLength = textFiltered.length;\\n\\n    if (minCharactersToSearch > 1) {\\n      if (filteredTextLength < minCharactersToSearch) {\\n        return \\"\\";\\n      }\\n    }\\n\\n    const cleanUserEnteredText = textCleanFunction(textFiltered);\\n    const textFilteredLowerCase = cleanUserEnteredText.toLowerCase().trim();\\n\\n    if (debug) {\\n      console.log(\\n        \\"Change user entered text \'\\" +\\n          userEnteredText +\\n          \\"\' into \'\\" +\\n          textFilteredLowerCase +\\n          \\"\'\\"\\n      );\\n    }\\n    return textFilteredLowerCase;\\n  }\\n\\n  async function search() {\\n    let tStart;\\n    if (debug) {\\n      tStart = performance.now();\\n      console.log(\\"Searching user entered text: \'\\" + text + \\"\'\\");\\n    }\\n\\n    const textFiltered = prepareUserEnteredText(text);\\n\\n    if (textFiltered === \\"\\") {\\n      filteredListItems = listItems;\\n      closeIfMinCharsToSearchReached();\\n      if (debug) {\\n        console.log(\\n          \\"User entered text is empty set the list of items to all items\\"\\n        );\\n      }\\n      return;\\n    }\\n\\n    if (searchFunction) {\\n      items = await searchFunction(textFiltered);\\n      prepareListItems();\\n    }\\n\\n    const searchWords = textFiltered.split(\\" \\");\\n\\n    let tempfilteredListItems = listItems.filter(listItem => {\\n      if (!listItem) {\\n        return false;\\n      }\\n      const itemKeywords = listItem.keywords;\\n\\n      let matches = 0;\\n      searchWords.forEach(searchWord => {\\n        if (itemKeywords.includes(searchWord)) {\\n          matches++;\\n        }\\n      });\\n\\n      return matches >= searchWords.length;\\n    });\\n\\n    const hlfilter = highlightFilter(textFiltered, [\\"label\\"]);\\n    const filteredListItemsHighlighted = tempfilteredListItems.map(hlfilter);\\n\\n    filteredListItems = filteredListItemsHighlighted;\\n    closeIfMinCharsToSearchReached();\\n    if (debug) {\\n      const tEnd = performance.now();\\n      console.log(\\n        \\"Search took \\" +\\n          (tEnd - tStart) +\\n          \\" milliseconds, found \\" +\\n          filteredListItems.length +\\n          \\" items\\"\\n      );\\n    }\\n  }\\n\\n  // $: text, search();\\n\\n  function selectListItem(listItem) {\\n    if (debug) {\\n      console.log(\\"selectListItem\\");\\n    }\\n    const newSelectedItem = listItem.item;\\n    if (beforeChange(selectedItem, newSelectedItem)) {\\n      selectedItem = newSelectedItem;\\n    }\\n  }\\n\\n  function selectItem() {\\n    if (debug) {\\n      console.log(\\"selectItem\\");\\n    }\\n    const listItem = filteredListItems[highlightIndex];\\n    selectListItem(listItem);\\n    close();\\n  }\\n\\n  function up() {\\n    if (debug) {\\n      console.log(\\"up\\");\\n    }\\n\\n    open();\\n    if (highlightIndex > 0) highlightIndex--;\\n    highlight();\\n  }\\n\\n  function down() {\\n    if (debug) {\\n      console.log(\\"down\\");\\n    }\\n\\n    open();\\n    if (highlightIndex < filteredListItems.length - 1) highlightIndex++;\\n    highlight();\\n  }\\n\\n  function highlight() {\\n    if (debug) {\\n      console.log(\\"highlight\\");\\n    }\\n\\n    const query = \\".selected\\";\\n    if (debug) {\\n      console.log(\\"Seaching DOM element: \\" + query + \\" in \\" + list);\\n    }\\n    const el = list.querySelector(query);\\n    if (el) {\\n      if (typeof el.scrollIntoViewIfNeeded === \\"function\\") {\\n        if (debug) {\\n          console.log(\\"Scrolling selected item into view\\");\\n        }\\n        el.scrollIntoViewIfNeeded();\\n      } else {\\n        if (debug) {\\n          console.warn(\\n            \\"Could not scroll selected item into view, scrollIntoViewIfNeeded not supported\\"\\n          );\\n        }\\n      }\\n    } else {\\n      if (debug) {\\n        console.warn(\\"Selected item not found to scroll into view\\");\\n      }\\n    }\\n  }\\n\\n  function onListItemClick(listItem) {\\n    if (debug) {\\n      console.log(\\"onListItemClick\\");\\n    }\\n\\n    selectListItem(listItem);\\n    close();\\n  }\\n\\n  function onDocumentClick(e) {\\n    if (debug) {\\n      console.log(\\"onDocumentClick: \\" + JSON.stringify(e.target));\\n    }\\n    if (e.target.closest(\\".\\" + uniqueId)) {\\n      if (debug) {\\n        console.log(\\"onDocumentClick inside\\");\\n      }\\n      // resetListToAllItemsAndOpen();\\n      highlight();\\n    } else {\\n      if (debug) {\\n        console.log(\\"onDocumentClick outside\\");\\n      }\\n      close();\\n    }\\n  }\\n\\n  function onKeyDown(e) {\\n    if (debug) {\\n      console.log(\\"onKeyDown\\");\\n    }\\n\\n    let key = e.key;\\n    if (key === \\"Tab\\" && e.shiftKey) key = \\"ShiftTab\\";\\n    const fnmap = {\\n      Tab: opened ? down.bind(this) : null,\\n      ShiftTab: opened ? up.bind(this) : null,\\n      ArrowDown: down.bind(this),\\n      ArrowUp: up.bind(this),\\n      Escape: onEsc.bind(this)\\n    };\\n    const fn = fnmap[key];\\n    if (typeof fn === \\"function\\") {\\n      e.preventDefault();\\n      fn(e);\\n    }\\n  }\\n\\n  function onKeyPress(e) {\\n    if (debug) {\\n      console.log(\\"onKeyPress\\");\\n    }\\n\\n    if (e.key === \\"Enter\\") {\\n      e.preventDefault();\\n      selectItem();\\n    }\\n  }\\n\\n  function onInput(e) {\\n    if (debug) {\\n      console.log(\\"onInput\\");\\n    }\\n\\n    text = e.target.value;\\n    search();\\n    highlightIndex = 0;\\n    open();\\n  }\\n\\n  function onInputClick() {\\n    if (debug) {\\n      console.log(\\"onInputClick\\");\\n    }\\n    resetListToAllItemsAndOpen();\\n  }\\n\\n  function onEsc(e) {\\n    if (debug) {\\n      console.log(\\"onEsc\\");\\n    }\\n\\n    //if (text) return clear();\\n    e.stopPropagation();\\n    if (opened) {\\n      input.focus();\\n      close();\\n    }\\n  }\\n\\n  function onFocus() {\\n    if (debug) {\\n      console.log(\\"onFocus\\");\\n    }\\n\\n    resetListToAllItemsAndOpen();\\n  }\\n\\n  function resetListToAllItemsAndOpen() {\\n    if (debug) {\\n      console.log(\\"resetListToAllItemsAndOpen\\");\\n    }\\n\\n    filteredListItems = listItems;\\n\\n    open();\\n\\n    // find selected item\\n    if (selectedItem) {\\n      if (debug) {\\n        console.log(\\n          \\"Searching currently selected item: \\" + JSON.stringify(selectedItem)\\n        );\\n      }\\n      for (let i = 0; i < listItems.length; i++) {\\n        const listItem = listItems[i];\\n        if (debug) {\\n          console.log(\\"Item \\" + i + \\": \\" + JSON.stringify(listItem));\\n        }\\n        if (selectedItem == listItem.item) {\\n          highlightIndex = i;\\n          if (debug) {\\n            console.log(\\n              \\"Found selected item: \\" + i + \\": \\" + JSON.stringify(listItem)\\n            );\\n          }\\n          highlight();\\n          break;\\n        }\\n      }\\n    }\\n  }\\n\\n  function open() {\\n    if (debug) {\\n      console.log(\\"open\\");\\n    }\\n\\n    // check if the search text has more than the min chars required\\n    if (isMinCharsToSearchReached()) {\\n      return;\\n    }\\n\\n    opened = true;\\n  }\\n\\n  function close() {\\n    if (debug) {\\n      console.log(\\"close\\");\\n    }\\n    opened = false;\\n\\n    if (!text && selectFirstIfEmpty) {\\n      highlightFilter = 0;\\n      selectItem();\\n    }\\n  }\\n\\n  function isMinCharsToSearchReached() {\\n    return (\\n      minCharactersToSearch > 1 && filteredTextLength < minCharactersToSearch\\n    );\\n  }\\n\\n  function closeIfMinCharsToSearchReached() {\\n    if (isMinCharsToSearchReached()) {\\n      close();\\n    }\\n  }\\n\\n  function clear() {\\n    if (debug) {\\n      console.log(\\"clear\\");\\n    }\\n\\n    text = \\"\\";\\n    setTimeout(() => input.focus());\\n  }\\n\\n  function onBlur() {\\n    if (debug) {\\n      console.log(\\"onBlur\\");\\n    }\\n    close();\\n  }\\n  // \'item number one\'.replace(/(it)(.*)(nu)(.*)(one)/ig, \'<b>$1</b>$2 <b>$3</b>$4 <b>$5</b>\')\\n  function highlightFilter(q, fields) {\\n    const qs = \\"(\\" + q.trim().replace(/\\\\s/g, \\")(.*)(\\") + \\")\\";\\n    const reg = new RegExp(qs, \\"ig\\");\\n    let n = 1;\\n    const len = qs.split(\\")(\\").length + 1;\\n    let repl = \\"\\";\\n    for (; n < len; n++) repl += n % 2 ? `<b>$${n}</b>` : `$${n}`;\\n\\n    return i => {\\n      const newI = Object.assign({ highlighted: {} }, i);\\n      if (fields) {\\n        fields.forEach(f => {\\n          if (!newI[f]) return;\\n          newI.highlighted[f] = newI[f].replace(reg, repl);\\n        });\\n      }\\n      return newI;\\n    };\\n  }\\n<\/script>\\n\\n<style>\\n  .autocomplete {\\n    min-width: 200px;\\n    display: inline-block;\\n    max-width: 100%;\\n    position: relative;\\n    vertical-align: top;\\n    height: 2.25em;\\n  }\\n\\n  .autocomplete:not(.hide-arrow)::after {\\n    border: 3px solid transparent;\\n    border-radius: 2px;\\n    border-right: 0;\\n    border-top: 0;\\n    content: \\" \\";\\n    display: block;\\n    height: 0.625em;\\n    margin-top: -0.4375em;\\n    pointer-events: none;\\n    position: absolute;\\n    top: 50%;\\n    transform: rotate(-45deg);\\n    transform-origin: center;\\n    width: 0.625em;\\n    border-color: #3273dc;\\n    right: 1.125em;\\n    z-index: 4;\\n  }\\n\\n  .autocomplete * {\\n    box-sizing: border-box;\\n  }\\n  .autocomplete-input {\\n    font: inherit;\\n    width: 100%;\\n    height: 100%;\\n    padding: 5px 11px;\\n  }\\n  .autocomplete-list {\\n    background: #fff;\\n    position: relative;\\n    width: 100%;\\n    overflow-y: auto;\\n    z-index: 99;\\n    padding: 10px 0;\\n    top: 0px;\\n    border: 1px solid #999;\\n    max-height: calc(15 * (1rem + 10px) + 15px);\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n  }\\n  .autocomplete-list:empty {\\n    padding: 0;\\n  }\\n  .autocomplete-list-item {\\n    padding: 5px 15px;\\n    color: #333;\\n    cursor: pointer;\\n    line-height: 1;\\n  }\\n\\n  .autocomplete-list-item:hover,\\n  .autocomplete-list-item.selected {\\n    background-color: #2e69e2;\\n    color: #fff;\\n  }\\n  .autocomplete-list-item-no-results {\\n    padding: 5px 15px;\\n    color: #999;\\n    line-height: 1;\\n  }\\n\\n  .autocomplete-list.hidden {\\n    display: none;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9zaW1wbGUtc3ZlbHRlLWF1dG9jb21wbGV0ZS9zcmMvbm9kZV9tb2R1bGVzL3NpbXBsZS1zdmVsdGUtYXV0b2NvbXBsZXRlL3NyYy9TaW1wbGVBdXRvY29tcGxldGUuc3ZlbHRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7RUFDRTtJQUNFLGdCQUFnQjtJQUNoQixxQkFBcUI7SUFDckIsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIsY0FBYztFQUNoQjs7RUFFQTtJQUNFLDZCQUE2QjtJQUM3QixrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLGFBQWE7SUFDYixZQUFZO0lBQ1osY0FBYztJQUNkLGVBQWU7SUFDZixxQkFBcUI7SUFDckIsb0JBQW9CO0lBQ3BCLGtCQUFrQjtJQUNsQixRQUFRO0lBRVIseUJBQXlCO0lBRXpCLHdCQUF3QjtJQUN4QixjQUFjO0lBQ2QscUJBQXFCO0lBQ3JCLGNBQWM7SUFDZCxVQUFVO0VBQ1o7O0VBRUE7SUFDRSxzQkFBc0I7RUFDeEI7RUFDQTtJQUNFLGFBQWE7SUFDYixXQUFXO0lBQ1gsWUFBWTtJQUNaLGlCQUFpQjtFQUNuQjtFQUNBO0lBQ0UsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsZ0JBQWdCO0lBQ2hCLFdBQVc7SUFDWCxlQUFlO0lBQ2YsUUFBUTtJQUNSLHNCQUFzQjtJQUN0QiwyQ0FBMkM7SUFDM0MseUJBQWlCO09BQWpCLHNCQUFpQjtRQUFqQixxQkFBaUI7WUFBakIsaUJBQWlCO0VBQ25CO0VBQ0E7SUFDRSxVQUFVO0VBQ1o7RUFDQTtJQUNFLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsZUFBZTtJQUNmLGNBQWM7RUFDaEI7O0VBRUE7O0lBRUUseUJBQXlCO0lBQ3pCLFdBQVc7RUFDYjtFQUNBO0lBQ0UsaUJBQWlCO0lBQ2pCLFdBQVc7SUFDWCxjQUFjO0VBQ2hCOztFQUVBO0lBQ0UsYUFBYTtFQUNmIiwiZmlsZSI6Im5vZGVfbW9kdWxlcy9zaW1wbGUtc3ZlbHRlLWF1dG9jb21wbGV0ZS9zcmMvU2ltcGxlQXV0b2NvbXBsZXRlLnN2ZWx0ZSIsInNvdXJjZXNDb250ZW50IjpbIlxuICAuYXV0b2NvbXBsZXRlIHtcbiAgICBtaW4td2lkdGg6IDIwMHB4O1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gICAgaGVpZ2h0OiAyLjI1ZW07XG4gIH1cblxuICAuYXV0b2NvbXBsZXRlOm5vdCguaGlkZS1hcnJvdyk6OmFmdGVyIHtcbiAgICBib3JkZXI6IDNweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XG4gICAgYm9yZGVyLXJpZ2h0OiAwO1xuICAgIGJvcmRlci10b3A6IDA7XG4gICAgY29udGVudDogXCIgXCI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiAwLjYyNWVtO1xuICAgIG1hcmdpbi10b3A6IC0wLjQzNzVlbTtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXI7XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyO1xuICAgIHdpZHRoOiAwLjYyNWVtO1xuICAgIGJvcmRlci1jb2xvcjogIzMyNzNkYztcbiAgICByaWdodDogMS4xMjVlbTtcbiAgICB6LWluZGV4OiA0O1xuICB9XG5cbiAgLmF1dG9jb21wbGV0ZSAqIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICB9XG4gIC5hdXRvY29tcGxldGUtaW5wdXQge1xuICAgIGZvbnQ6IGluaGVyaXQ7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHBhZGRpbmc6IDVweCAxMXB4O1xuICB9XG4gIC5hdXRvY29tcGxldGUtbGlzdCB7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICB6LWluZGV4OiA5OTtcbiAgICBwYWRkaW5nOiAxMHB4IDA7XG4gICAgdG9wOiAwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzk5OTtcbiAgICBtYXgtaGVpZ2h0OiBjYWxjKDE1ICogKDFyZW0gKyAxMHB4KSArIDE1cHgpO1xuICAgIHVzZXItc2VsZWN0OiBub25lO1xuICB9XG4gIC5hdXRvY29tcGxldGUtbGlzdDplbXB0eSB7XG4gICAgcGFkZGluZzogMDtcbiAgfVxuICAuYXV0b2NvbXBsZXRlLWxpc3QtaXRlbSB7XG4gICAgcGFkZGluZzogNXB4IDE1cHg7XG4gICAgY29sb3I6ICMzMzM7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICB9XG5cbiAgLmF1dG9jb21wbGV0ZS1saXN0LWl0ZW06aG92ZXIsXG4gIC5hdXRvY29tcGxldGUtbGlzdC1pdGVtLnNlbGVjdGVkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmU2OWUyO1xuICAgIGNvbG9yOiAjZmZmO1xuICB9XG4gIC5hdXRvY29tcGxldGUtbGlzdC1pdGVtLW5vLXJlc3VsdHMge1xuICAgIHBhZGRpbmc6IDVweCAxNXB4O1xuICAgIGNvbG9yOiAjOTk5O1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICB9XG5cbiAgLmF1dG9jb21wbGV0ZS1saXN0LmhpZGRlbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuIl19 */</style>\\n\\n<div\\n  class=\\"{className ? className : \'\'}\\n  {hideArrow ? \'hide-arrow\' : \'\'} autocomplete select is-fullwidth {uniqueId}\\">\\n  <input\\n    type=\\"text\\"\\n    class=\\"{inputClassName ? inputClassName : \'\'} input autocomplete-input\\"\\n    id=\\"{inputId ? inputId : \'\'} \\"\\n    {placeholder}\\n    {name}\\n    {disabled}\\n    {title}\\n    bind:this={input}\\n    bind:value={text}\\n    on:input={onInput}\\n    on:focus={onFocus}\\n    on:keydown={onKeyDown}\\n    on:click={onInputClick}\\n    on:keypress={onKeyPress} />\\n  <div\\n    class=\\"{dropdownClassName ? dropdownClassName : \'\'} autocomplete-list {showList ? \'\' : \'hidden\'}\\n    is-fullwidth\\"\\n    bind:this={list}>\\n    {#if filteredListItems && filteredListItems.length > 0}\\n      {#each filteredListItems as listItem, i}\\n        {#if maxItemsToShowInList <= 0 || i < maxItemsToShowInList}\\n          {#if listItem}\\n            <div\\n              class=\\"autocomplete-list-item {i === highlightIndex ? \'selected\' : \'\'}\\"\\n              on:click={() => onListItemClick(listItem)}>\\n              {#if listItem.highlighted}\\n                {@html listItem.highlighted.label}\\n              {:else}\\n                {@html listItem.label}\\n              {/if}\\n            </div>\\n          {/if}\\n        {/if}\\n      {/each}\\n\\n      {#if maxItemsToShowInList > 0 && filteredListItems.length > maxItemsToShowInList}\\n        <div class=\\"autocomplete-list-item-no-results\\">\\n          ...{filteredListItems.length - maxItemsToShowInList} results not shown\\n        </div>\\n      {/if}\\n    {:else if noResultsText}\\n      <div class=\\"autocomplete-list-item-no-results\\">{noResultsText}</div>\\n    {/if}\\n  </div>\\n</div>\\n\\n<svelte:window on:click={onDocumentClick} />\\n"],"names":[],"mappings":"AAskBE,aAAa,4BAAC,CAAC,AACb,SAAS,CAAE,KAAK,CAChB,OAAO,CAAE,YAAY,CACrB,SAAS,CAAE,IAAI,CACf,QAAQ,CAAE,QAAQ,CAClB,cAAc,CAAE,GAAG,CACnB,MAAM,CAAE,MAAM,AAChB,CAAC,AAED,yCAAa,KAAK,WAAW,CAAC,OAAO,AAAC,CAAC,AACrC,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,WAAW,CAC7B,aAAa,CAAE,GAAG,CAClB,YAAY,CAAE,CAAC,CACf,UAAU,CAAE,CAAC,CACb,OAAO,CAAE,GAAG,CACZ,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,SAAS,CACrB,cAAc,CAAE,IAAI,CACpB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,SAAS,CAAE,OAAO,MAAM,CAAC,CACzB,gBAAgB,CAAE,MAAM,CACxB,KAAK,CAAE,OAAO,CACd,YAAY,CAAE,OAAO,CACrB,KAAK,CAAE,OAAO,CACd,OAAO,CAAE,CAAC,AACZ,CAAC,AAED,2BAAa,CAAC,cAAE,CAAC,AACf,UAAU,CAAE,UAAU,AACxB,CAAC,AACD,mBAAmB,4BAAC,CAAC,AACnB,IAAI,CAAE,OAAO,CACb,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,GAAG,CAAC,IAAI,AACnB,CAAC,AACD,kBAAkB,4BAAC,CAAC,AAClB,UAAU,CAAE,IAAI,CAChB,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,EAAE,CACX,OAAO,CAAE,IAAI,CAAC,CAAC,CACf,GAAG,CAAE,GAAG,CACR,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,UAAU,CAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAC3C,mBAAmB,CAAE,IAAI,CACtB,gBAAgB,CAAE,IAAI,CACrB,eAAe,CAAE,IAAI,CACjB,WAAW,CAAE,IAAI,AAC3B,CAAC,AACD,8CAAkB,MAAM,AAAC,CAAC,AACxB,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,uBAAuB,4BAAC,CAAC,AACvB,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,OAAO,CACf,WAAW,CAAE,CAAC,AAChB,CAAC,AAED,mDAAuB,MAAM,CAC7B,uBAAuB,SAAS,4BAAC,CAAC,AAChC,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,IAAI,AACb,CAAC,AACD,kCAAkC,4BAAC,CAAC,AAClC,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,CAAC,AAChB,CAAC,AAED,kBAAkB,OAAO,4BAAC,CAAC,AACzB,OAAO,CAAE,IAAI,AACf,CAAC"}'};function t(e,n){let t;"function"!=typeof e&&console.error("Not a function: "+e+", argument: "+n);try{t=e(n)}catch(t){console.warn("Error executing Autocomplete function on value: "+n+" function: "+e)}let i=t;return null==i&&(i=""),"string"!=typeof i&&(i=i.toString()),i}const i=e.create_ssr_component((i,o,l,s)=>{let{items:A}=o,{labelFieldName:r}=o,{keywordsFieldName:d=r}=o,{valueFieldName:c}=o,{labelFunction:a=function(e){return null==e?"":r?e[r]:e}}=o,{keywordsFunction:u=function(e){return null==e?"":d?e[d]:e}}=o,{valueFunction:C=function(e){return null==e?e:c?e[c]:e}}=o,{keywordsCleanFunction:m=function(e){return e}}=o,{textCleanFunction:g=function(e){return e}}=o,{searchFunction:h=!1}=o,{beforeChange:p=function(e,n){return!0}}=o,{onChange:I=function(e){}}=o,{selectFirstIfEmpty:f=!1}=o,{minCharactersToSearch:b=1}=o,{maxItemsToShowInList:x=0}=o,{noResultsText:F="No results found"}=o;const v="sautocomplete-"+Math.floor(1e3*Math.random());function B(e){return t(a,e)}function w(e){const n=t(u,e);let i=t(m,n);return i=i.toLowerCase().trim(),X&&console.log("Extracted keywords: '"+i+"' from item: "+JSON.stringify(e)),i}let G,{placeholder:y}=o,{className:U}=o,{inputClassName:O}=o,{inputId:Q}=o,{name:N}=o,{dropdownClassName:E}=o,{hideArrow:L=!1}=o,{disabled:k=!1}=o,{title:S}=o,{debug:X=!1}=o,{selectedItem:Z}=o,{value:T}=o;let W,j=[];return void 0===o.items&&l.items&&void 0!==A&&l.items(A),void 0===o.labelFieldName&&l.labelFieldName&&void 0!==r&&l.labelFieldName(r),void 0===o.keywordsFieldName&&l.keywordsFieldName&&void 0!==d&&l.keywordsFieldName(d),void 0===o.valueFieldName&&l.valueFieldName&&void 0!==c&&l.valueFieldName(c),void 0===o.labelFunction&&l.labelFunction&&void 0!==a&&l.labelFunction(a),void 0===o.keywordsFunction&&l.keywordsFunction&&void 0!==u&&l.keywordsFunction(u),void 0===o.valueFunction&&l.valueFunction&&void 0!==C&&l.valueFunction(C),void 0===o.keywordsCleanFunction&&l.keywordsCleanFunction&&void 0!==m&&l.keywordsCleanFunction(m),void 0===o.textCleanFunction&&l.textCleanFunction&&void 0!==g&&l.textCleanFunction(g),void 0===o.searchFunction&&l.searchFunction&&void 0!==h&&l.searchFunction(h),void 0===o.beforeChange&&l.beforeChange&&void 0!==p&&l.beforeChange(p),void 0===o.onChange&&l.onChange&&void 0!==I&&l.onChange(I),void 0===o.selectFirstIfEmpty&&l.selectFirstIfEmpty&&void 0!==f&&l.selectFirstIfEmpty(f),void 0===o.minCharactersToSearch&&l.minCharactersToSearch&&void 0!==b&&l.minCharactersToSearch(b),void 0===o.maxItemsToShowInList&&l.maxItemsToShowInList&&void 0!==x&&l.maxItemsToShowInList(x),void 0===o.noResultsText&&l.noResultsText&&void 0!==F&&l.noResultsText(F),void 0===o.placeholder&&l.placeholder&&void 0!==y&&l.placeholder(y),void 0===o.className&&l.className&&void 0!==U&&l.className(U),void 0===o.inputClassName&&l.inputClassName&&void 0!==O&&l.inputClassName(O),void 0===o.inputId&&l.inputId&&void 0!==Q&&l.inputId(Q),void 0===o.name&&l.name&&void 0!==N&&l.name(N),void 0===o.dropdownClassName&&l.dropdownClassName&&void 0!==E&&l.dropdownClassName(E),void 0===o.hideArrow&&l.hideArrow&&void 0!==L&&l.hideArrow(L),void 0===o.disabled&&l.disabled&&void 0!==k&&l.disabled(k),void 0===o.title&&l.title&&void 0!==S&&l.title(S),void 0===o.debug&&l.debug&&void 0!==X&&l.debug(X),void 0===o.selectedItem&&l.selectedItem&&void 0!==Z&&l.selectedItem(Z),void 0===o.value&&l.value&&void 0!==T&&l.value(T),i.css.add(n),T=C(Z),G=B(Z),I(Z),W=!1,function(){let e;X&&(e=performance.now(),console.log("prepare items to search"),console.log("items: "+JSON.stringify(A))),Array.isArray(A)||(console.warn("Autocomplete items / search function did not return array but",A),A=[]);const n=A?A.length:0;if(j=new Array(n),n>0&&A.forEach((e,n)=>{const t=function(e){return{keywords:w(e),label:B(e),item:e}}(e);null==t&&console.log("Undefined item for: ",e),j[n]=t}),X){const n=performance.now();console.log(j.length+" items to search prepared in "+(n-e)+" milliseconds")}}(),`<div class="${e.escape(U||"")+"\n  "+e.escape(L?"hide-arrow":"")+" autocomplete select is-fullwidth "+e.escape(v)+" svelte-1btjh7"}"><input type="text" class="${e.escape(O||"")+" input autocomplete-input svelte-1btjh7"}" id="${e.escape(Q||"")+" "}"${e.add_attribute("placeholder",y,0)}${e.add_attribute("name",N,0)} ${k?"disabled":""}${e.add_attribute("title",S,0)}${e.add_attribute("this",void 0,1)}${e.add_attribute("value",G,1)}>\n  <div class="${e.escape(E||"")+" autocomplete-list "+e.escape("hidden")+"\n    is-fullwidth svelte-1btjh7"}"${e.add_attribute("this",void 0,1)}>${""+(F?`<div class="autocomplete-list-item-no-results svelte-1btjh7">${e.escape(F)}</div>`:"")}</div></div>\n\n`}),o=e.create_ssr_component((n,t,o,l)=>{let s,A,r,{companies:d}=t;void 0===t.companies&&o.companies&&void 0!==d&&o.companies(d);do{A=!0,s&&s.FID&&(window.location.href=`/${s.FID}/`),r=""+e.validate_component(i,"AutoComplete").$$render(n,{items:d,labelFieldName:"NAME",selectedItem:s},{selectedItem:e=>{s=e,A=!1}},{})}while(!A);return r});module.exports=o;
